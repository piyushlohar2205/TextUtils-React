{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","class","onClick","toggleMode","role","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","console","log","select","navigator","clipboard","writetext","split","join","myHeading","length","Alert","alert","align","word","lowwer","charAt","slice","capitalize","msg","About","myStyle","setMyStyle","_useState3","_useState4","btnText","setBtnText","aria-labelledby","data-bs-parent","border","defaultProps","aboutUs","App","setMode","setAlert","message","setTimeout","react_router_dom","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.87aeb535.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n         <nav className={`navbar navbar-expand-lg bg-${props.mode}`}>\r\n  <div className=\"container-fluid \">\r\n    <a className={`navbar-brand text-${props.mode === 'light' ? 'dark' : 'light'}`} href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className={`nav-link active text-${props.mode === 'light'?'dark':'light'}`} aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li>\r\n        <a className={`nav-link active text-${props.mode === 'light'?'dark':'light'}`} aria-current=\"page\" href=\"/about\">About</a>\r\n        </li>\r\n      </ul>\r\n      <div class={`form-check form-switch mx-5 text-${props.mode === 'light'?'dark':'light'}`}>\r\n         <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n         <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\nNavbar.propTypes={\r\n    title: PropTypes.string,\r\n    aboutUs: PropTypes.string\r\n} \r\n\r\nNavbar.defaultProps={\r\n    title: \"Piyush Namdeo Lohar\",\r\n    aboutUs: \"Wishes\"\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"Success\");\r\n    }\r\n    \r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowwercase\", \"Success\");\r\n    }\r\n\r\n    const handleUpClicks = (event) =>{\r\n         setText(event.target.value)\r\n    }\r\n\r\n    const handleClearText = (event) =>{\r\n        let mytext= '';\r\n        setText(mytext)\r\n        props.showAlert(\"Text Clered!\", \"Success\");\r\n   }\r\n    const[text, setText] = useState(\"Enter text here...\")\r\n\r\n    const handleCopy = ()=>{\r\n        var text= document.getElementById(\"myBox\");\r\n        console.log(\"Copied Data Successfully...\");\r\n        text.select();\r\n        navigator.clipboard.writetext(text.value);\r\n        props.showAlert(\"Text copied!\", \"Success\");\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let newText = text.split(/[  ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed Extra Spaces!\", \"Success\");\r\n    }\r\n    \r\n  return (\r\n    <>  \r\n       <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleUpClicks} style={{backgroundColor: props.mode === 'dark'? 'grey': 'white', color: props.mode === 'dark' ? 'white' : '#042743'}} id=\"myBox\" rows=\"15\"></textarea>\r\n        </div>\r\n        </div> \r\n        <button className=\"btn btn-success mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-info mx-2\" onClick={handleClearText}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Spaces</button>\r\n    \r\n    \r\n        <div className=\"container my-5\" style={{backgroundColor: props.mode === 'dark'? '#042743': 'white',   color: props.mode === 'dark' ? 'white' : '#042743'}}>\r\n        <h1>{props.myHeading}</h1>\r\n        <p> {text.split(\" \").length-1} words and {text.length} characters</p>\r\n        <p>{0.008* text.split(\" \").length} Miniutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0 ? text : \"Enter Something to Preview it Here...\"}</p>\r\n        </div> \r\n        \r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n   \r\n    const capitalize = (word)=>{\r\n       \r\n        const lowwer= word.toLowerCase();\r\n        return lowwer.charAt(0).toUpperCase()+lowwer.slice(1);\r\n    }\r\n\r\n  return (\r\n   \r\n    \r\n    props.alert && <div className= \"alert alert-success center width:center\" align=\"center\">\r\n    <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n    \r\n    \r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport React from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const[myStyle, setMyStyle]= useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n    const[btnText, setBtnText]=useState('Enable Dark Mode')\r\n\r\n    const toggleMyStyle = ()=>{\r\n        if(myStyle.color === 'black')\r\n        {\r\n            setMyStyle(\r\n                {\r\n                    color: 'white',\r\n                    backgroundColor:'black',\r\n                    border: '1px solid white'\r\n                }\r\n            )\r\n            setBtnText('Enable Light Mode')\r\n        }\r\n        else{\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor:'white'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n        }\r\n        \r\n    }\r\n\r\n  return (\r\n    <div className='container' style={myStyle}>\r\n       < h1 className='my-4'>About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n    <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" style={myStyle} aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className='container my-3' >\r\n<button type=\"button\" onClick={toggleMyStyle} className=\"btn btn-dark\">{btnText}</button></div>\r\n</div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert'\nimport About from './Components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const[mode, setMode]=useState('light')\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>\n  {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500);\n  }\n  \n  const toggleMode = () => {\n    if(mode === 'light')\n    {\n      setMode('dark')\n      document.body.style.backgroundColor='#042743'\n      showAlert(\"Dark mode has been enabled\",\" success\")\n      document.title='TextUtils - Dark Mode'\n      \n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      //setInterval(()=>{\n        //document.title='TextUtils - Lite Mode';\n     // },2000)\n     document.title='TextUtils - Lite Mode'\n    }\n  }\n  \n return (\n  <>\n  <Router>\n  <Navbar title=\"BlackSMITH\" mode={mode} toggleMode={toggleMode}/>\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  <Switch>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter your text here!\" myHeading=\"Your Text Priview\" mode={mode}/>\n          </Route>\n        </Switch>\n  </div>\n  </Router>\n  </>\n  );\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}